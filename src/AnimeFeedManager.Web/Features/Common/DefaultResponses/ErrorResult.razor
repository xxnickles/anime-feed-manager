@using AnimeFeedManager.Old.Common.Domain.Errors
<div hx-swap-oob="afterbegin:#toast-panel">
    <ClosableNotification Type="@GetToastType()">
        <Content>
            @switch (Error)
            {
                case BasicError error:
                    <h3 class="font-bold">An Error Occurred</h3>
                    <p class="text-sm whitespace-normal">@error</p>
                    break;
                case NotFoundError error:
                    <h3 class="font-bold">Resource has not been found</h3>
                    <p class="text-sm whitespace-normal">@error.Message</p>
                    break;
                case NoContentError error:
                    <h3 class="font-bold">Nothing to see here!</h3>
                    <p class="text-sm whitespace-normal">@error.Message</p>
                    break;
                case ValidationErrors errors:
                    <h3 class="font-bold">Nothing to see here!</h3>
                    <ValidationResult ValidationErrors="errors"/>
                    break;
                default:
                    <h3 class="font-bold">An Error Occurred</h3>
                    <p class="text-sm whitespace-normal">Unexpected condition has occured</p>
                    break;
            }
        </Content>
    </ClosableNotification>
</div>

@code {
    [Parameter, EditorRequired] public DomainError Error { get; set; } = new BasicError(string.Empty);

    private ToastType GetToastType()
    {
        return Error switch
        {
            NoContentError => ToastType.Warning,
            NotFoundError => ToastType.Warning,
            _ => ToastType.Error
        };
    }

}