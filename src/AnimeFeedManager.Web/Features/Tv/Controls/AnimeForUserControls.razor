@using AnimeFeedManager.Old.Common.Dto
@if (Anime is not null)
{
    @switch (Anime)
    {
        case InterestedAnime interestedAnime:
            <InterestedAnimeControls ControlData="@NotAvailableControlData.MapFrom(interestedAnime, LoaderSelector)" ></InterestedAnimeControls>
            break;
        case NotAvailableAnime notAvailableAnime:
            <NotAvailableAnimeControls ControlData="@NotAvailableControlData.MapFrom(notAvailableAnime, LoaderSelector)"></NotAvailableAnimeControls>
            break;
        case SubscribedAnime subscribedAnime:
            <SubscribedAnimeControls ControlData="@AvailableTvSeriesControlData.MapFrom(subscribedAnime, LoaderSelector)" ></SubscribedAnimeControls>
            break;
        case UnSubscribedAnime unSubscribedAnime:
            <UnsubscribedAnimeControls ControlData="@AvailableTvSeriesControlData.MapFrom(unSubscribedAnime, LoaderSelector)" ></UnsubscribedAnimeControls>
            break;
        default:
            <div class="badge badge-error gap-2">Nothing yet!</div>
            break;
    }
}

@code {
    [Parameter, EditorRequired] public AnimeForUser? Anime { get; set; }
    [Parameter, EditorRequired] public string LoaderSelector { get; set; } = string.Empty;
}

